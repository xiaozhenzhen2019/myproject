<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxt.sys.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.sxt.sys.domain.User" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="identity" property="identity" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userid, loginname, identity, realname, sex, address, phone, pwd, position
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_users
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_users
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sxt.sys.domain.User" >
    insert into sys_users (userid, loginname, identity, 
      realname, sex, address, 
      phone, pwd, position
      )
    values (#{userid,jdbcType=INTEGER}, #{loginname,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sxt.sys.domain.User" >
    insert into sys_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="identity != null" >
        identity,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="position != null" >
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sxt.sys.domain.User" >
    update sys_users
    <set >
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sxt.sys.domain.User" >
    update sys_users
    set loginname = #{loginname,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <!-- 用户登陆 -->
	<select id="login" resultMap="BaseResultMap" parameterType="com.sxt.sys.domain.User">
		select * from sys_users 
		<where>
			loginname=#{loginname} and pwd=#{pwd}
		</where>
	</select>
  <!-- 用户查询-->
	<select id="queryAllUsers" resultMap="BaseResultMap" parameterType="com.sxt.sys.domain.User">
		select * from sys_users 
		<where>
			<if test="loginname!=null">
				and loginname like concat("%",#{loginname},"%")
			</if>
			<if test="identity!=null">
				and identity like concat("%",#{identity},"%")
			</if>
			<if test="realname!=null">
				and realname like concat("%",#{realname},"%")
			</if>
			<if test="address!=null">
				and address like concat("%",#{address},"%")
			</if>
			<if test="phone!=null">
				and phone like concat("%",#{phone},"%")
			</if>
			<if test="position!=null">
				and position like concat("%",#{position},"%")
			</if>
		</where>
	</select>
	
	<!-- 根据用户id删除sys_role_user里面的数据-->
	<delete id="deleteRolesByUserId">
		delete from sys_role_user where uid=${value}
	</delete>
	<!-- 向sys_role_user里面添加数据-->
	<insert id="saveUserRoles">
		insert into sys_role_user(uid,rid) values(#{param1},#{param2})
	</insert>
	
</mapper>